{"ast":null,"code":"var _s = $RefreshSig$();\nimport { cleanup } from \"@testing-library/react\";\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIspending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIspending(false);\n        setError(null);\n      }).catch(err => {\n        setIspending(false);\n        setError(err.message);\n      });\n    }, 1000);\n    return () => console.log(cleanup);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"L6xGcqdJOeYMJHXujn2oH3qorFg=\");\nexport default useFetch;","map":{"version":3,"names":["cleanup","useState","useEffect","useFetch","url","_s","data","setData","isPending","setIspending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message","console","log"],"sources":["C:/Users/niran/OneDrive/Documents/todos-list/src/usefetch.js"],"sourcesContent":["import { cleanup } from \"@testing-library/react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIspending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch(url)\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw Error(\"could not fetch the data for that resource\");\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setData(data);\r\n          setIspending(false);\r\n          setError(null);\r\n        })\r\n        .catch((err) => {\r\n          setIspending(false);\r\n          setError(err.message);\r\n        });\r\n    }, 1000);\r\n    return () => console.log(cleanup);\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,MAAM;MACfC,KAAK,CAACT,GAAG,CAAC,CACPU,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACX,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACnB,CAAC,CAAC,CACDJ,IAAI,CAAER,IAAI,IAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;QACdX,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMC,OAAO,CAACC,GAAG,CAACvB,OAAO,CAAC;EACnC,CAAC,EAAE,CAACI,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CA5BIF,QAAQ;AA8Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}